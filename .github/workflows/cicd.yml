name: Build & Deploy Backend

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u${{ secrets.MYSQL_USERNAME }} -p${{ secrets.MYSQL_PASSWORD }} || exit 1"
          --health-interval=10s --health-timeout=5s --health-retries=30

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Make Docker Env
        run: |
            touch ./.env
            echo "${{ secrets.DOCKER_ENV }}" > ./.env

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: ./gradlew build

      - name: Test with Gradle
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: ./gradlew --info test

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -t kcjsend5/stockbot:latest .

      - name: Push to DockerHub
        run: docker push kcjsend5/stockbot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: deploy skipped
        run: echo "deploy skipped"
      #    - name: SSH to EC2 and deploy
      #      uses: appleboy/ssh-action@master
      #      with:
      #        host: ${{ secrets.EC2_HOST }}
      #        username: ${{ secrets.EC2_USERNAME }}
      #        key: ${{ secrets.EC2_SSH_KEY }}
      #        script: |
      #          sudo docker
      #          sudo docker rm -f $(sudo docker ps -qa)
      #          sudo docker pull kcjsend5/stockbot:latest
      #          sudo docker run -d -p 8080:8080 kcjsend5/stockbot:latest
